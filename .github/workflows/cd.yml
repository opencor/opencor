name: CD

on:
  release:
    types: [ created ]
  workflow_dispatch:

jobs:
  cd:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Windows
            os: windows-2019
          - name: Linux
            os: ubuntu-20.04
          - name: macOS
            os: macos-13
    env:
      BUILDCACHE_COMPRESS_FORMAT: ZSTD
      BUILDCACHE_DEBUG: -1
      BUILDCACHE_DIRECT_MODE: true
      BUILDCACHE_LOG_FILE: ""
      EV_CERTIFICATE_BASE64: ${{ secrets.EV_CERTIFICATE_BASE64 }}
    steps:
      - name: Set the timezone to New Zealand
        uses: szenius/set-timezone@v2.0
        with:
          timezoneWindows: "New Zealand Standard Time"
          timezoneLinux: "Pacific/Auckland"
          timezoneMacos: "Pacific/Auckland"
      - name: Check out OpenCOR
        uses: actions/checkout@v4
      - name: Retrieve the EV certificate (Windows only)
        if: matrix.name == 'Windows'
        shell: bash
        run: echo -n $EV_CERTIFICATE_BASE64 | base64 -d > EVCertificate.pfx
      - name: Install CMake and Ninja
        uses: lukka/get-cmake@latest
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install Sphinx
        run: pip install Sphinx sphinx_copybutton sphinx_inline_tabs
      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: '5.12.12'
          setup-python: 'false'
      - name: Install packages (Linux only)
        if: ${{ runner.os == 'Linux' }}
        run: sudo apt install libglu1-mesa
      - name: Install buildcache
        uses: cscouto/buildcache-action@v1
        with:
          cache_key: ${{ matrix.os }}
      - name: Cache external dependencies
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/ext
          key: ${{ matrix.os }}-ExternalDependencies-${{ github.sha }}
          restore-keys: ${{ matrix.os }}-ExternalDependencies
      - name: Package OpenCOR
        run: ./package
      - name: Upload OpenCOR artifacts
        if: ${{ !startsWith(github.ref, 'refs/tags/v') }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: ./build/OpenCOR-*
      - name: Release OpenCOR
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        uses: softprops/action-gh-release@v1
        with:
          files: ./build/OpenCOR-*
